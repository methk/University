import RadixAtomCacheProvider from './RadixAtomCacheProvider';
import { RadixAtom, RadixKeyPair } from '../RadixAtomModel';
export default class RadixNEDBAtomCache implements RadixAtomCacheProvider {
    private db;
    /**
     * Creates an instance of radix nedbatom cache.
     * @param filename File path on disk in Node, path in localStorage in the browser
     */
    constructor(filename: string);
    /**
     * Clears all atoms from the cache
     */
    reset(): void;
    storeAtom: (atom: RadixAtom) => Promise<void | RadixAtom>;
    getAtoms: (keyPair?: RadixKeyPair) => Promise<RadixAtom[]>;
    private asyncDeserialize;
    deleteAtom(atom: RadixAtom): Promise<unknown>;
    findOne: (opt: any) => Promise<unknown>;
    notExists: (opt: any) => Promise<unknown>;
    find: (opt: any) => Promise<unknown>;
    insert: (opt: any) => Promise<unknown>;
    remove: (opt: any) => Promise<unknown>;
}
