"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var decimal_js_1 = require("decimal.js");
var RadixAtomModel_1 = require("../RadixAtomModel");
var RadixTokenFlags;
(function (RadixTokenFlags) {
    RadixTokenFlags[RadixTokenFlags["TOKEN_TRADEABLE"] = 1] = "TOKEN_TRADEABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_SPENDABLE"] = 2] = "TOKEN_SPENDABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_REDEEMABLE"] = 4] = "TOKEN_REDEEMABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_RECOVERABLE"] = 8] = "TOKEN_RECOVERABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_CHARGABLE"] = 16] = "TOKEN_CHARGABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_DIVIDENDS"] = 1024] = "TOKEN_DIVIDENDS";
    RadixTokenFlags[RadixTokenFlags["TOKEN_SYSTEM"] = 4096] = "TOKEN_SYSTEM";
    RadixTokenFlags[RadixTokenFlags["TOKEN_STABILIZED"] = 16384] = "TOKEN_STABILIZED"; // Token is stabilised
})(RadixTokenFlags = exports.RadixTokenFlags || (exports.RadixTokenFlags = {}));
var RadixTokenClass = /** @class */ (function (_super) {
    tslib_1.__extends(RadixTokenClass, _super);
    function RadixTokenClass(json) {
        var _this = _super.call(this, json) || this;
        _this.serializationProperties.push('type');
        _this.serializationProperties.push('iso');
        _this.serializationProperties.push('description');
        _this.serializationProperties.push('classification');
        _this.serializationProperties.push('icon');
        _this.serializationProperties.push('sub_units');
        _this.serializationProperties.push('maximum_units');
        _this.serializationProperties.push('settings');
        return _this;
    }
    /**
     * Convert actual decimal token amount to integer subunits stored on the ledger
     * @param amount
     * @returns subunits
     */
    RadixTokenClass.prototype.toSubunits = function (amount) {
        var x = new decimal_js_1.Decimal(amount);
        var y = new decimal_js_1.Decimal(this.sub_units);
        return x
            .times(y)
            .truncated()
            .toNumber();
    };
    /**
     * Convert subunits token amount to actual decimal token amount
     * @param amount
     * @returns token units
     */
    RadixTokenClass.prototype.toTokenUnits = function (amount) {
        var x = new decimal_js_1.Decimal(amount);
        var y = new decimal_js_1.Decimal(this.sub_units);
        return x.dividedBy(y).toNumber();
    };
    RadixTokenClass.SERIALIZER = 62583504;
    return RadixTokenClass;
}(RadixAtomModel_1.RadixAtom));
exports.default = RadixTokenClass;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhUb2tlbkNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvdG9rZW4vUmFkaXhUb2tlbkNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHlDQUFvQztBQUVwQyxvREFBMEQ7QUFFMUQsSUFBWSxlQVNYO0FBVEQsV0FBWSxlQUFlO0lBQ3ZCLDJFQUFtQixDQUFBO0lBQ25CLDJFQUFtQixDQUFBO0lBQ25CLDZFQUFvQixDQUFBO0lBQ3BCLCtFQUFxQixDQUFBO0lBQ3JCLDRFQUFvQixDQUFBO0lBQ3BCLDhFQUFzQixDQUFBO0lBQ3RCLHdFQUFtQixDQUFBO0lBQ25CLGlGQUF3QixDQUFBLENBQUMsc0JBQXNCO0FBQ25ELENBQUMsRUFUVyxlQUFlLEdBQWYsdUJBQWUsS0FBZix1QkFBZSxRQVMxQjtBQUVEO0lBQTZDLDJDQUFTO0lBWWxELHlCQUFZLElBQWE7UUFBekIsWUFDSSxrQkFBTSxJQUFJLENBQUMsU0FVZDtRQVJHLEtBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDekMsS0FBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUN4QyxLQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFBO1FBQ2hELEtBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtRQUNuRCxLQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ3pDLEtBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7UUFDOUMsS0FBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQTtRQUNsRCxLQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFBOztJQUNqRCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILG9DQUFVLEdBQVYsVUFBVyxNQUFjO1FBQ3JCLElBQUksQ0FBQyxHQUFHLElBQUksb0JBQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUMzQixJQUFJLENBQUMsR0FBRyxJQUFJLG9CQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBRW5DLE9BQU8sQ0FBQzthQUNILEtBQUssQ0FBQyxDQUFDLENBQUM7YUFDUixTQUFTLEVBQUU7YUFDWCxRQUFRLEVBQUUsQ0FBQTtJQUNuQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILHNDQUFZLEdBQVosVUFBYSxNQUFjO1FBQ3ZCLElBQUksQ0FBQyxHQUFHLElBQUksb0JBQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUMzQixJQUFJLENBQUMsR0FBRyxJQUFJLG9CQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBRW5DLE9BQU8sQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQTtJQUNwQyxDQUFDO0lBakRhLDBCQUFVLEdBQUcsUUFBUSxDQUFBO0lBa0R2QyxzQkFBQztDQUFBLEFBbkRELENBQTZDLDBCQUFTLEdBbURyRDtrQkFuRG9CLGVBQWUifQ==