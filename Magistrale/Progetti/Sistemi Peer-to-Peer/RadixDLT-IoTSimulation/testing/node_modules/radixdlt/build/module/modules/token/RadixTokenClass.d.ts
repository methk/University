import { RadixAtom, RadixBase64 } from '../RadixAtomModel';
export declare enum RadixTokenFlags {
    TOKEN_TRADEABLE = 1,
    TOKEN_SPENDABLE = 2,
    TOKEN_REDEEMABLE = 4,
    TOKEN_RECOVERABLE = 8,
    TOKEN_CHARGABLE = 16,
    TOKEN_DIVIDENDS = 1024,
    TOKEN_SYSTEM = 4096,
    TOKEN_STABILIZED = 16384
}
export default class RadixTokenClass extends RadixAtom {
    static SERIALIZER: number;
    type: string;
    iso: string;
    description: string;
    classification: string;
    icon: RadixBase64;
    sub_units: number;
    maximum_units: number;
    settings: number;
    constructor(json?: object);
    /**
     * Convert actual decimal token amount to integer subunits stored on the ledger
     * @param amount
     * @returns subunits
     */
    toSubunits(amount: number): number;
    /**
     * Convert subunits token amount to actual decimal token amount
     * @param amount
     * @returns token units
     */
    toTokenUnits(amount: number): number;
}
