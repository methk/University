import { Decimal } from 'decimal.js';
import { RadixAtom } from '../RadixAtomModel';
export var RadixTokenFlags;
(function (RadixTokenFlags) {
    RadixTokenFlags[RadixTokenFlags["TOKEN_TRADEABLE"] = 1] = "TOKEN_TRADEABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_SPENDABLE"] = 2] = "TOKEN_SPENDABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_REDEEMABLE"] = 4] = "TOKEN_REDEEMABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_RECOVERABLE"] = 8] = "TOKEN_RECOVERABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_CHARGABLE"] = 16] = "TOKEN_CHARGABLE";
    RadixTokenFlags[RadixTokenFlags["TOKEN_DIVIDENDS"] = 1024] = "TOKEN_DIVIDENDS";
    RadixTokenFlags[RadixTokenFlags["TOKEN_SYSTEM"] = 4096] = "TOKEN_SYSTEM";
    RadixTokenFlags[RadixTokenFlags["TOKEN_STABILIZED"] = 16384] = "TOKEN_STABILIZED"; // Token is stabilised
})(RadixTokenFlags || (RadixTokenFlags = {}));
export default class RadixTokenClass extends RadixAtom {
    constructor(json) {
        super(json);
        this.serializationProperties.push('type');
        this.serializationProperties.push('iso');
        this.serializationProperties.push('description');
        this.serializationProperties.push('classification');
        this.serializationProperties.push('icon');
        this.serializationProperties.push('sub_units');
        this.serializationProperties.push('maximum_units');
        this.serializationProperties.push('settings');
    }
    /**
     * Convert actual decimal token amount to integer subunits stored on the ledger
     * @param amount
     * @returns subunits
     */
    toSubunits(amount) {
        let x = new Decimal(amount);
        let y = new Decimal(this.sub_units);
        return x
            .times(y)
            .truncated()
            .toNumber();
    }
    /**
     * Convert subunits token amount to actual decimal token amount
     * @param amount
     * @returns token units
     */
    toTokenUnits(amount) {
        let x = new Decimal(amount);
        let y = new Decimal(this.sub_units);
        return x.dividedBy(y).toNumber();
    }
}
RadixTokenClass.SERIALIZER = 62583504;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhUb2tlbkNsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvdG9rZW4vUmFkaXhUb2tlbkNsYXNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUE7QUFFcEMsT0FBTyxFQUFFLFNBQVMsRUFBZSxNQUFNLG1CQUFtQixDQUFBO0FBRTFELE1BQU0sQ0FBTixJQUFZLGVBU1g7QUFURCxXQUFZLGVBQWU7SUFDdkIsMkVBQW1CLENBQUE7SUFDbkIsMkVBQW1CLENBQUE7SUFDbkIsNkVBQW9CLENBQUE7SUFDcEIsK0VBQXFCLENBQUE7SUFDckIsNEVBQW9CLENBQUE7SUFDcEIsOEVBQXNCLENBQUE7SUFDdEIsd0VBQW1CLENBQUE7SUFDbkIsaUZBQXdCLENBQUEsQ0FBQyxzQkFBc0I7QUFDbkQsQ0FBQyxFQVRXLGVBQWUsS0FBZixlQUFlLFFBUzFCO0FBRUQsTUFBTSxDQUFDLE9BQU8sT0FBTyxlQUFnQixTQUFRLFNBQVM7SUFZbEQsWUFBWSxJQUFhO1FBQ3JCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUVYLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDekMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUN4QyxJQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFBO1FBQ2hELElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQTtRQUNuRCxJQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ3pDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7UUFDOUMsSUFBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQTtRQUNsRCxJQUFJLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFBO0lBQ2pELENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsVUFBVSxDQUFDLE1BQWM7UUFDckIsSUFBSSxDQUFDLEdBQUcsSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDM0IsSUFBSSxDQUFDLEdBQUcsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBRW5DLE9BQU8sQ0FBQzthQUNILEtBQUssQ0FBQyxDQUFDLENBQUM7YUFDUixTQUFTLEVBQUU7YUFDWCxRQUFRLEVBQUUsQ0FBQTtJQUNuQixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFlBQVksQ0FBQyxNQUFjO1FBQ3ZCLElBQUksQ0FBQyxHQUFHLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQzNCLElBQUksQ0FBQyxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUVuQyxPQUFPLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUE7SUFDcEMsQ0FBQzs7QUFqRGEsMEJBQVUsR0FBRyxRQUFRLENBQUEifQ==