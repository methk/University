/// <reference types="node" />
import { RadixECKeyPair, RadixSignature, RadixEUID } from '../RadixAtomModel';
import BN from 'bn.js';
import EC from 'elliptic';
export default class RadixKeyPair {
    keyPair: EC.ec;
    static generateNew(): RadixKeyPair;
    static fromAddress(address: string): RadixKeyPair;
    static fromPublic(publicKey: Buffer): RadixKeyPair;
    static fromPrivate(privateKey: Buffer | string): RadixKeyPair;
    static fromRadixECKeyPair(keyPair: RadixECKeyPair): RadixKeyPair;
    getAddress(): string;
    getHash(): Buffer;
    getUID(): RadixEUID;
    getShard(): Long;
    getPublic(): Buffer;
    getPrivate(enc?: string): BN | string;
    sign(data: Buffer): RadixSignature;
    verify(data: Buffer, signature: RadixSignature): any;
    equals(otherKeyPair: RadixKeyPair): boolean;
    toString(): string;
}
