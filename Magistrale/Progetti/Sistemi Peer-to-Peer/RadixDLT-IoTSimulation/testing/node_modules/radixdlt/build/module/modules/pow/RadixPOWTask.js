import RadixPOW from './RadixPOW';
import { logger } from '../common/RadixLogger';
export default class RadixPOWTask {
    constructor(magic, seed, target) {
        this.magic = magic;
        this.seed = seed;
        this.target = target;
        this.pow = new RadixPOW(magic, seed);
        logger.debug(target.toString('hex'));
    }
    computePow() {
        return new Promise((resolve, reject) => {
            this.attemptPow(resolve);
        });
    }
    // attemptPow(callback: Function) {
    //    const hash = this.pow.getHash()
    //    if (this.meetsTarget(hash)) {
    //        logger.debug(hash.toString('hex'))
    //        callback(this.pow)
    //    }
    //    else {
    //        this.pow.incrementNonce()
    //        // Non-blocking
    //        setTimeout(() => {
    //            this.attemptPow(callback)
    //        }, 0)
    //    }
    // }
    attemptPow(callback) {
        for (let i = 0; i < 100; i++) {
            this.pow.incrementNonce();
            const hash = this.pow.getHash();
            if (this.meetsTarget(hash)) {
                logger.debug(hash.toString('hex'));
                setTimeout(() => {
                    callback(this.pow);
                });
                return;
            }
        }
        // Non-blocking
        setTimeout(() => {
            this.attemptPow(callback);
        }, 0);
    }
    meetsTarget(hash) {
        return hash.compare(this.target) < 0;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhQT1dUYXNrLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL21vZHVsZXMvcG93L1JhZGl4UE9XVGFzay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLFFBQVEsTUFBTSxZQUFZLENBQUE7QUFFakMsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHVCQUF1QixDQUFBO0FBRTlDLE1BQU0sQ0FBQyxPQUFPLE9BQU8sWUFBWTtJQUc3QixZQUNhLEtBQWEsRUFDYixJQUFZLEVBQ1osTUFBYztRQUZkLFVBQUssR0FBTCxLQUFLLENBQVE7UUFDYixTQUFJLEdBQUosSUFBSSxDQUFRO1FBQ1osV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQUV2QixJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksUUFBUSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQTtRQUVwQyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQTtJQUN4QyxDQUFDO0lBRUQsVUFBVTtRQUNOLE9BQU8sSUFBSSxPQUFPLENBQVcsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDN0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUM1QixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFRCxtQ0FBbUM7SUFDbkMscUNBQXFDO0lBQ3JDLG1DQUFtQztJQUNuQyw0Q0FBNEM7SUFDNUMsNEJBQTRCO0lBQzVCLE9BQU87SUFDUCxZQUFZO0lBQ1osbUNBQW1DO0lBRW5DLHlCQUF5QjtJQUN6Qiw0QkFBNEI7SUFDNUIsdUNBQXVDO0lBQ3ZDLGVBQWU7SUFDZixPQUFPO0lBQ1AsSUFBSTtJQUVKLFVBQVUsQ0FBQyxRQUFrQjtRQUN6QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzFCLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLENBQUE7WUFDekIsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtZQUUvQixJQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUU7Z0JBQ3hCLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO2dCQUVsQyxVQUFVLENBQUMsR0FBRyxFQUFFO29CQUNaLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUE7Z0JBQ3RCLENBQUMsQ0FBQyxDQUFBO2dCQUVGLE9BQU07YUFDVDtTQUNKO1FBRUQsZUFBZTtRQUNmLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDWixJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQzdCLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtJQUNULENBQUM7SUFFRCxXQUFXLENBQUMsSUFBWTtRQUNwQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQTtJQUN4QyxDQUFDO0NBQ0oifQ==