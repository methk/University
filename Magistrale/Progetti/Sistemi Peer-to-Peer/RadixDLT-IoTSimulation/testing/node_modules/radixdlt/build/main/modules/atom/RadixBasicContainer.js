"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var typescript_map_1 = require("typescript-map");
var RadixUtil_1 = tslib_1.__importDefault(require("../common/RadixUtil"));
var RadixAtomModel_1 = require("../RadixAtomModel");
var RadixBasicContainer = /** @class */ (function () {
    function RadixBasicContainer(json) {
        this.version = 100;
        this.serializationProperties = new Array();
        if (json) {
            for (var key in json) {
                if (key == 'constructor' || key == 'serializationProperties') {
                    continue;
                }
                this[key] = json[key];
            }
        }
        // this.serializationProperties.push('serializer')
        this.serializationProperties.push('version');
    }
    Object.defineProperty(RadixBasicContainer.prototype, "serializer", {
        get: function () {
            return this.constructor['SERIALIZER'];
        },
        set: function (serializer) {
            // Do nothing
        },
        enumerable: true,
        configurable: true
    });
    RadixBasicContainer.prototype.toJson = function () {
        var output = { serializer: 0 };
        for (var key in this) {
            var serialized = RadixAtomModel_1.RadixSerializer.toJson(this[key]);
            if (serialized) {
                output[key] = serialized;
            }
        }
        output.serializer = this.constructor['SERIALIZER'];
        return output;
    };
    RadixBasicContainer.prototype.toByteArray = function () {
        var e_1, _a, e_2, _b;
        // Generic object
        var type = RadixAtomModel_1.DataTypes.OBJECT;
        var length = 0;
        // Serialize all properties
        // Build a map sorted by property name
        var map = new typescript_map_1.TSMap();
        try {
            for (var _c = tslib_1.__values(this.serializationProperties), _d = _c.next(); !_d.done; _d = _c.next()) {
                var key = _d.value;
                if (!(key in this)) {
                    continue;
                }
                var serializedValue = RadixAtomModel_1.RadixSerializer.toByteArray(this[key]);
                length += key.length + 1 + serializedValue.length;
                map.sortedSet(key, serializedValue);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        // Write everything to the buffer
        var output = Buffer.alloc(length + 5);
        output.writeUInt8(type, 0);
        output.writeUInt32BE(length, 1);
        var position = 5;
        try {
            for (var _e = tslib_1.__values(map.keys()), _f = _e.next(); !_f.done; _f = _e.next()) {
                var key = _f.value;
                var value = map.get(key);
                output.writeUInt8(key.length, position);
                position++;
                output.write(key, position);
                position += key.length;
                value.copy(output, position);
                position += value.length;
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return output;
    };
    RadixBasicContainer.prototype.getHash = function () {
        var serialized = this.toByteArray();
        return RadixUtil_1.default.hash(serialized);
    };
    RadixBasicContainer.prototype.getHID = function () {
        var hash = this.getHash();
        return new RadixAtomModel_1.RadixEUID(hash.slice(0, 12));
    };
    Object.defineProperty(RadixBasicContainer.prototype, "hid", {
        get: function () {
            return this.getHID();
        },
        set: function (hid) {
            // Do nothing
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadixBasicContainer.prototype, "_id", {
        get: function () {
            return this.hid.toString();
        },
        set: function (_id) {
            // Do nothing
        },
        enumerable: true,
        configurable: true
    });
    RadixBasicContainer.prototype.getSize = function () {
        return this.toByteArray().length;
    };
    return RadixBasicContainer;
}());
exports.default = RadixBasicContainer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhCYXNpY0NvbnRhaW5lci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2F0b20vUmFkaXhCYXNpY0NvbnRhaW5lci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpREFBc0M7QUFFdEMsMEVBQTJDO0FBRTNDLG9EQUswQjtBQUUxQjtJQU1JLDZCQUFZLElBQWE7UUFMbEIsWUFBTyxHQUFHLEdBQUcsQ0FBQTtRQUdWLDRCQUF1QixHQUFHLElBQUksS0FBSyxFQUFVLENBQUE7UUFHbkQsSUFBSSxJQUFJLEVBQUU7WUFDTixLQUFLLElBQUksR0FBRyxJQUFJLElBQUksRUFBRTtnQkFDbEIsSUFBSSxHQUFHLElBQUksYUFBYSxJQUFJLEdBQUcsSUFBSSx5QkFBeUIsRUFBRTtvQkFDMUQsU0FBUTtpQkFDWDtnQkFFRCxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO2FBQ3hCO1NBQ0o7UUFFRCxrREFBa0Q7UUFDbEQsSUFBSSxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUNoRCxDQUFDO0lBRUQsc0JBQUksMkNBQVU7YUFBZDtZQUNJLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQTtRQUN6QyxDQUFDO2FBRUQsVUFBZSxVQUFVO1lBQ3JCLGFBQWE7UUFDakIsQ0FBQzs7O09BSkE7SUFNTSxvQ0FBTSxHQUFiO1FBQ0ksSUFBSSxNQUFNLEdBQUcsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLENBQUE7UUFDOUIsS0FBSyxJQUFJLEdBQUcsSUFBUyxJQUFJLEVBQUU7WUFDdkIsSUFBSSxVQUFVLEdBQUcsZ0NBQWUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUE7WUFDbEQsSUFBSSxVQUFVLEVBQUU7Z0JBQ1osTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLFVBQVUs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