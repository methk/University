import axios from 'axios';
import { RadixSerializer } from '../RadixAtomModel';
/**
 * Node discovery from the Radix bootstrap service
 */
export default class RadixNodeDiscoveryFromNodeFinder {
    /**
     * Creates an instance of radix node discovery from node finder.
     * @param bootstrapService The full address to the node finder service for the universe
     */
    constructor(bootstrapService, nodeRPCAddress) {
        this.bootstrapService = bootstrapService;
        this.nodeRPCAddress = nodeRPCAddress;
    }
    async loadNodes() {
        const bootstrapNodeIP = (await axios.get(this.bootstrapService)).data;
        if (bootstrapNodeIP.length < 2) {
            throw new Error('Failed to get node list from bootstrap service');
        }
        const bootstrapNode = this.nodeRPCAddress(bootstrapNodeIP);
        const getPeersRequestData = {
            id: 0,
            method: 'Network.getLivePeers',
            params: []
        };
        const nodeListResponse = await axios.post(bootstrapNode, getPeersRequestData);
        const nodeList = RadixSerializer.fromJson(nodeListResponse.data.result);
        if (nodeList.length === 0) {
            throw new Error('Bootstrap node has no connections');
        }
        return nodeList;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhOb2RlRGlzY292ZXJ5RnJvbU5vZGVGaW5kZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbW9kdWxlcy91bml2ZXJzZS9SYWRpeE5vZGVEaXNjb3ZlcnlGcm9tTm9kZUZpbmRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUE7QUFJekIsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRW5EOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE9BQU8sT0FBTyxnQ0FBZ0M7SUFFakQ7OztPQUdHO0lBQ0gsWUFDYSxnQkFBd0IsRUFDeEIsY0FBMEM7UUFEMUMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFRO1FBQ3hCLG1CQUFjLEdBQWQsY0FBYyxDQUE0QjtJQUFHLENBQUM7SUFFcEQsS0FBSyxDQUFDLFNBQVM7UUFDbEIsTUFBTSxlQUFlLEdBQUcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUE7UUFDckUsSUFBSSxlQUFlLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM1QixNQUFNLElBQUksS0FBSyxDQUFDLGdEQUFnRCxDQUFDLENBQUE7U0FDcEU7UUFDRCxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxDQUFBO1FBRTFELE1BQU0sbUJBQW1CLEdBQUc7WUFDeEIsRUFBRSxFQUFFLENBQUM7WUFDTCxNQUFNLEVBQUUsc0JBQXNCO1lBQzlCLE1BQU0sRUFBRSxFQUFFO1NBQ2IsQ0FBQTtRQUNELE1BQU0sZ0JBQWdCLEdBQUcsTUFBTSxLQUFLLENBQUMsSUFBSSxDQUNyQyxhQUFhLEVBQ2IsbUJBQW1CLENBQ3RCLENBQUE7UUFFRCxNQUFNLFFBQVEsR0FBRyxlQUFlLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUV2RSxJQUFJLFFBQVEsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLE1BQU0sSUFBSSxLQUFLLENBQUMsbUNBQW1DLENBQUMsQ0FBQTtTQUN2RDtRQUVELE9BQU8sUUFBUSxDQUFBO0lBQ25CLENBQUM7Q0FDSiJ9