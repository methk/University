import { RadixTokenClass } from '../RadixAtomModel';
/**
 * Tokens' information manager.
 */
export declare class RadixTokenManager {
    tokens: {
        [id: string]: RadixTokenClass;
    };
    initialize(): void;
    /**
     * Add or update a token, indexed by its ID.
     *
     * @param {RadixTokenClass} token
     * @memberof RadixToken
     */
    addOrUpdateToken(token: RadixTokenClass): void;
    /**
     * Get a token by ID, if it doesn't exists it searches for it in the Ledger.
     *
     * @param {string} id
     * @returns {RadixTokenClass}
     * @memberof RadixToken
     */
    getTokenByID(id: string): RadixTokenClass;
    /**
     * Get a token by ISO, if it doesn't exists it searches for it in the Ledger.
     *
     * @param {string} iso
     * @returns {RadixTokenClass}
     * @memberof RadixToken
     */
    getTokenByISO(iso: string): RadixTokenClass;
    /**
     * Return a list of the current tokens in the manager.
     *
     * @returns
     * @memberof RadixToken
     */
    getCurrentTokens(): {
        [id: string]: RadixTokenClass;
    };
}
export declare let radixTokenManager: RadixTokenManager;
