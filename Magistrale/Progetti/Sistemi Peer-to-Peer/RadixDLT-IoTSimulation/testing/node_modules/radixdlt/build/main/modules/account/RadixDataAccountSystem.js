"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var rxjs_1 = require("rxjs");
var typescript_map_1 = require("typescript-map");
var operators_1 = require("rxjs/operators");
var RadixAtomModel_1 = require("../RadixAtomModel");
var RadixDataAccountSystem = /** @class */ (function () {
    function RadixDataAccountSystem(keyPair) {
        this.keyPair = keyPair;
        this.name = 'DATA';
        this.applicationDataSubject = new rxjs_1.Subject();
        this.applicationData = new typescript_map_1.TSMap();
    }
    RadixDataAccountSystem.prototype.processAtomUpdate = function (atomUpdate) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                if (atomUpdate.atom.serializer !== RadixAtomModel_1.RadixApplicationPayloadAtom.SERIALIZER) {
                    return [2 /*return*/];
                }
                if (atomUpdate.action === 'STORE') {
                    this.processStoreAtom(atomUpdate.atom);
                }
                else if (atomUpdate.action === 'DELETE') {
                    this.processDeleteAtom(atomUpdate.atom);
                }
                return [2 /*return*/];
            });
        });
    };
    RadixDataAccountSystem.prototype.processStoreAtom = function (atom) {
        var applicationId = atom.applicationId;
        var hid = atom.hid.toString();
        // Skip existing atoms
        if (this.applicationData.has(applicationId) &&
            this.applicationData.get(applicationId).has(hid)) {
            return;
        }
        var applicationData = {
            hid: hid,
            payload: '',
            timestamp: atom.timestamps.default
        };
        var applicationDataUpdate = {
            action: 'STORE',
            hid: hid,
            applicationId: applicationId,
            data: applicationData,
        };
        if (atom.payload === null) {
            return;
        }
        applicationData.payload = atom.payload;
        if (!this.applicationData.has(applicationId)) {
            this.applicationData.set(applicationId, new typescript_map_1.TSMap());
        }
        this.applicationData.get(applicationId).set(hid, applicationData);
        this.applicationDataSubject.next(applicationDataUpdate);
    };
    RadixDataAccountSystem.prototype.processDeleteAtom = function (atom) {
        var applicationId = atom.applicationId;
        var hid = atom.hid.toString();
        // Skip nonexisting atoms
        if (!this.applicationData.has(applicationId) ||
            !this.applicationData.get(applicationId).has(hid)) {
            return;
        }
        var applicationData = this.applicationData.get(applicationId).get(hid);
        var applicationDataUpdate = {
            action: 'DELETE',
            hid: hid,
            applicationId: applicationId,
            data: applicationData,
        };
        this.applicationData.get(applicationId).delete(hid);
        this.applicationDataSubject.next(applicationDataUpdate);
    };
    RadixDataAccountSystem.prototype.getApplicationData = function (applicationId) {
        var _this = this;
        return rxjs_1.Observable.create(function (observer) {
            var e_1, _a;
            // Send all old data
            if (_this.applicationData.has(applicationId)) {
                try {
                    for (var _b = tslib_1.__values(_this.applicationData
                        .get(applicationId)
                        .values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var applicationData = _c.value;
                        var applicationDataUpdate = {
                            action: 'STORE',
                            hid: applicationData.hid,
                            applicationId: applicationId,
                            data: applicationData
                        };
                        observer.next(applicationDataUpdate);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
            // Subscribe for new ones
            _this.applicationDataSubject
                .pipe(operators_1.filter(function (update) {
                return update.applicationId === applicationId;
            }))
                .subscribe(observer);
        });
    };
    return RadixDataAccountSystem;
}());
exports.default = RadixDataAccountSystem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFkaXhEYXRhQWNjb3VudFN5c3RlbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9tb2R1bGVzL2FjY291bnQvUmFkaXhEYXRhQWNjb3VudFN5c3RlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2QkFBb0Q7QUFDcEQsaURBQXNDO0FBQ3RDLDRDQUF1QztBQU12QyxvREFBMkY7QUFFM0Y7SUFLSSxnQ0FBcUIsT0FBTztRQUFQLFlBQU8sR0FBUCxPQUFPLENBQUE7UUFKckIsU0FBSSxHQUFHLE1BQU0sQ0FBQTtRQUNiLDJCQUFzQixHQUF3QyxJQUFJLGNBQU8sRUFBRSxDQUFBO1FBQzNFLG9CQUFlLEdBQXVELElBQUksc0JBQUssRUFBRSxDQUFBO0lBRXpELENBQUM7SUFFbkIsa0RBQWlCLEdBQTlCLFVBQStCLFVBQTJCOzs7Z0JBQ3RELElBQUksVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLEtBQUssNENBQTJCLENBQUMsVUFBVSxFQUFFO29CQUN2RSxzQkFBTTtpQkFDVDtnQkFFRCxJQUFJLFVBQVUsQ0FBQyxNQUFNLEtBQUssT0FBTyxFQUFFO29CQUMvQixJQUFJLENBQUMsZ0JBQWdCLENBQUMsVUFBVSxDQUFDLElBQW1DLENBQUMsQ0FBQTtpQkFDeEU7cUJBQU0sSUFBSSxVQUFVLENBQUMsTUFBTSxLQUFLLFFBQVEsRUFBRTtvQkFDdkMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFVBQVUsQ0FBQyxJQUFtQyxDQUFDLENBQUE7aUJBQ3pFOzs7O0tBQ0o7SUFFTyxpREFBZ0IsR0FBeEIsVUFBeUIsSUFBaUM7UUFDdEQsSUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQTtRQUN4QyxJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxDQUFBO1FBRS9CLHNCQUFzQjtRQUN0QixJQUNJLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQztZQUN2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