import { Subject, Observable, BehaviorSubject } from 'rxjs';
import { TSMap } from 'typescript-map';
import RadixAccountSystem from './RadixAccountSystem';
import RadixTransaction from './RadixTransaction';
import RadixTransactionUpdate from './RadixTransactionUpdate';
import RadixKeyPair from '../wallet/RadixKeyPair';
import { RadixParticle, RadixAtomUpdate } from '../RadixAtomModel';
export default class RadixTransferAccountSystem implements RadixAccountSystem {
    readonly keyPair: RadixKeyPair;
    name: string;
    transactions: TSMap<string, RadixTransaction>;
    balance: {
        [tokenId: string]: number;
    };
    transactionSubject: Subject<RadixTransactionUpdate>;
    balanceSubject: BehaviorSubject<{
        [tokenId: string]: number;
    }>;
    private unspentConsumables;
    private spentConsumables;
    constructor(keyPair: RadixKeyPair);
    processAtomUpdate(atomUpdate: RadixAtomUpdate): Promise<void>;
    private processStoreAtom;
    private processDeleteAtom;
    getAllTransactions(): Observable<RadixTransactionUpdate>;
    getUnspentConsumables(): TSMap<string, RadixParticle>;
}
